/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <behaviors.dtsi>

#define KEYS_L < \
     0  1  2  3  4  5 \
    12 13 14 15 16 17 \
    24 25 26 27 28 29 \
    36 37 38 39 40 41 \
       50 51 52 53 54 \
>

#define KEYS_R < \
     6  7  8  9 10 11 \
    18 19 20 21 22 23 \
    30 31 32 33 34 35 \
    44 45 46 47 48 49 \
    55 56 57 58 59 \
>


&caps_word {
    continue-list = <BACKSPACE UNDERSCORE MINUS LSHIFT>;
};

&num_word {
    layers = <3>;
};

/ {
    macros {
        kc_capp: kc_capp {
            label = "kc_capp";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI &kp LSHIFT>
                , <&macro_tap &kp N4>
                , <&macro_release &kp LGUI &kp LSHIFT>
                ;
        };
        kc_cpy: kc_cpy {
            label = "kc_cpy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI &kp LSHIFT &kp LCTRL>
                , <&macro_tap &kp N4>
                , <&macro_release &kp LGUI &kp LSHIFT &kp LCTRL>
                ;
        };
        colon: colon {
            label = "colon";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <2>;
            tap-ms = <1>;
            bindings
                = <&macro_tap &kp CAPS>
                , <&macro_tap &kp P>
                , <&macro_tap &kp CAPS>
                ;
        };
    };
    behaviors {
        rhm: r_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "R_HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <200>;
            global-quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = KEYS_L;
            hold-trigger-on-release;
        };
        rhms: r_homerow_mod_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "R_HOMEROW_MOD_SHIFT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = KEYS_L;
            hold-trigger-on-release;
        };
        rhl: r_homerow_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "R_HOMEROW_LAYER_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <200>;
            global-quick-tap-ms = <150>;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = KEYS_L;
            hold-trigger-on-release;
        };
        lhm: l_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "L_HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <200>;
            global-quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = KEYS_R;
            hold-trigger-on-release;
        };
        lhms: l_homerow_mod_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "L_HOMEROW_MOD_SHIFT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = KEYS_R;
            hold-trigger-on-release;
        };
        lhl: l_homerow_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "L_HOMEROW_LAYER_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <200>;
            global-quick-tap-ms = <150>;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = KEYS_R;
            hold-trigger-on-release;
        };
        h_mod_left: h_mod_left {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_LEFT";
            #binding-cells = <0>;
            bindings = <&rhl 2 H>, <&kp LEFT>;
            mods = <(MOD_LALT|MOD_LGUI)>;
            keep-mods = <(MOD_LALT|MOD_LGUI)>;
        };
        l_mod_right: l_mod_right {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_RIGHT";
            #binding-cells = <0>;
            bindings = <&rhm RALT L>, <&kp RIGHT>;
            mods = <(MOD_LALT|MOD_LGUI)>;
            keep-mods = <(MOD_LALT|MOD_LGUI)>;
        };
        caps_nav_ht: caps_nav_layer_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "CAPS_NAV_LAYER_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <200>;
            bindings = <&mo>, <&caps_word>;
        };
        num_ht: number_layer_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "NUMBER_LAYER_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <200>;
            bindings = <&mo>, <&num_word>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |  1  |  2  |  3    |  4    |  5     |                   |  6     |  7  |  8  |  9   |   0   |       |
// |       |  Q  |  W  |  E    |  R    |  T     |                   |  Y     |  U  |  I  |  O   |   P   |   -   |
// |  ESC  |  A  |  S  |  D    |  F    |  G     |                   |  H     |  J  |  K  |  L   |   ;   |   '   |
// |       |  Z  |  X  |  C    |  V    |  B     |  PP    |  | PSCRN |  N     |  M  |  ,  |  .   |   /   |   \   |
//               |     |  ALT  |  GUI  |  LOWER |  SPACE |  | BSPC  |  NUM   |     |     |      |
            bindings = <
&none        &kp N1         &kp N2        &kp N3            &kp N4         &kp N5                                              &kp N6         &kp N7        &kp N8            &kp N9          &kp N0             &none
&none        &kp Q          &kp W         &kp E             &kp R          &kp T                                               &kp Y          &kp U         &kp I             &kp O           &kp P              &kp MINUS
&gresc       &lhm LCTRL A   &lhm LALT S   &lhms LSHIFT D    &lhm LGUI F    &lhl 2 G                                            &h_mod_left    &rhm RGUI J   &rhms RSHIFT K    &l_mod_right    &rhm RCTRL SEMI    &kp SQT
&none        &kp Z          &kp X         &kp C             &kp V          &kp B               &kp C_PLAY_PAUSE    &kc_capp    &kp N          &kp M         &kp COMMA         &kp DOT         &kp FSLH           &kp BSLH
                            &none         &kp RALT          &kp RGUI       &caps_nav_ht 1 0    &kp SPACE           &kp BSPC    &num_ht 3 0    &none         &none             &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_BRIGHTNESS_DEC C_BRIGHTNESS_INC>;
        };

        lower_layer {
// --------------------------------------------------------------------------------------------------------
// |    |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |    |     |     |      |      |      |                   |      |       |       |      |       |  F12  |
// |    |     |     |      |      |      |                   |   <- |   v   |   ^   |  ->  |  RET  |       |
// |    |     |     |      |      |      |        |  | PSCRN |      |  TAB  |       |      |       |       |
//            |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans    &kp F1    &kp F2    &kp F3    &kp F4    &kp F5                         &kp F6      &kp F7      &kp F8      &kp F9       &kp F10    &kp F11
&trans    &trans    &trans    &trans    &trans    &trans                         &trans      &trans      &trans      &trans       &trans     &trans
&trans    &trans    &trans    &trans    &trans    &trans                         &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT    &kp RET    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans    &kc_cpy    &trans      &kp TAB     &trans      &trans       &trans     &trans
                    &trans    &trans    &trans    &trans    &trans    &trans     &trans      &trans      &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp LEFT RIGHT &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// | BT_CLR | BT1 | BT2 |  BT3 | BT4  |      |                   |      |       |       |      |       |       |
// |        |  :  |  =  |  {   |  }   |  |   |                   |  `   |  [    |  ]    |      |       |       |
// |   ~    |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |       |
// |        |  ?  |  +  |  "   |  '   |  ;   |        |  |       |  _   |  -    |  /    |  \   |       |       |
//                |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&bt BT_CLR     &bt BT_SEL 1     &bt BT_SEL 2    &bt BT_SEL 3     &bt BT_SEL 4    &trans                           &trans       &trans      &trans      &trans       &trans       &trans
&trans         &colon           &kp EQUAL       &kp LBRC         &kp RBRC        &trans                           &kp GRAVE    &kp LBKT    &kp RBKT    &none        &trans       &trans
&kp TILDE      &kp EXCL         &kp AT          &kp HASH         &kp DLLR        &kp PRCNT                        &kp CARET    &kp AMPS    &kp ASTRK   &kp LPAR     &kp RPAR     &trans
&trans         &kp QMARK        &kp PLUS        &kp DQT          &kp SQT         &kp P        &trans    &trans    &kp UNDER   &kp MINUS    &kp FSLH    &kp BSLH
                                &trans          &trans           &trans          &trans       &trans    &trans    &trans       &trans      &trans      &trans
            >;
     
            sensor-bindings = <&inc_dec_kp C_PREV C_NEXT &inc_dec_kp PG_UP PG_DN>;
        };
        num_layer {
// --------------------------------------------------------------------------------------------------------
// |    |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |    |     |   7 |   8  |   9  |      |                   |      |       |       |      |       |       |
// |    |   0 |   4 |   5  |   6  |      |                   |      |       |       |      |       |       |
// |    |     |   1 |   2  |   3  |      |        |  |       |      |       |       |      |       |       |
//            |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans    &kp F1    &kp F2    &kp F3    &kp F4    &kp F5                         &kp F6      &kp F7      &kp F8      &kp F9       &kp F10     &kp F11
&trans    &trans    &kp N7    &kp N8    &kp N9    &trans                         &trans      &trans      &trans      &trans       &trans      &trans
&trans    &kp N0    &kp N4    &kp N5    &kp N6    &trans                         &trans      &trans      &trans      &trans       &trans      &trans
&trans    &trans    &kp N1    &kp N2    &kp N3    &trans    &trans    &trans     &trans      &trans      &trans      &trans       &trans      &trans
                    &trans    &trans    &trans    &trans    &trans    &trans     &trans      &trans      &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp LEFT RIGHT &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
